<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Current project definition -->
	<groupId>eu.daxiongmao</groupId>
	<artifactId>tutorial</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>tutorial</name>
	<description>This is a demonstration of how to use Java EE 7. These samples can be re-use later in other project.</description>

	<properties>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- ## Testing frameworks / libraries ## -->
		<junit.version>4.11</junit.version>
		<glassfish.version>4.0</glassfish.version>
		<weld-se.version>2.1.2.Final</weld-se.version>
	</properties>

	<dependencies>

		<!-- NOTE : Please avoid to add much dependencies at parent level, as it adds them for each module ! -->

		<!-- Java EE 7 specifications. This will be provided by the application server -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Apache commons: set of utilities -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- ###################### -->
		<!-- # Tests dependencies # -->
		<!-- ###################### -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Lightweight IoC container (this is the heart of JBoss, Glassfish, etc.)  -->
		<!-- See: http://weld.cdi-spec.org -->
		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se</artifactId>
			<version>${weld-se.version}</version>
			<!-- In order to use a main(...) method, do NOT use scope "test" -->
			<!-- scope>test</scope -->
		</dependency>

		<!-- Embedded J2EE server -->
		<dependency>
			<groupId>org.glassfish.main.extras</groupId>
			<artifactId>glassfish-embedded-all</artifactId>
			<version>${glassfish.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<!-- Compilation settings. Java EE 7 requires min Java 7 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArguments>
						<endorseddirs>${endorsed.dir}</endorseddirs>
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- Required to build both EJB and war. This will build the JavaEE7 output directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${endorsed.dir}</outputDirectory>
							<silent>true</silent>
							<artifactItems>
								<artifactItem>
									<groupId>javax</groupId>
									<artifactId>javaee-endorsed-api</artifactId>
									<version>7.0</version>
									<type>jar</type>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Integration tests plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- ## Children ## -->
	<modules>
		<module>backend</module>
		<module>frontend</module>
		<module>deployment</module>
	</modules>


</project>
